{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/tasklist/tasklist.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 106;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 106\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 147;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 147\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-tasklist',\n  templateUrl: 'tasklist.html'\n})\nexport class TaskListPage {\ntasks: Array<any> = [ ] ;\n  constructor(public navCtrl: NavController) {\n    this.tasks  = [\n      {title: 'Milk', status: 'open'},\n      {title: 'Egg', status: 'open'},\n      {title: 'Syrup', status: 'open'},\n      {title: 'Pancake Mix', status: 'open'}\n      ] ;\n  }\n\n  addTask(): void {\n  let newTask: string = prompt(\"New Task\") ;\n  if (newTask != '' && newTask != null\n  ) {\n  this.tasks.push({title: newTask, status: 'open'}) ;\n  }\n    }\n    markDone(task: any): void {\n      task.status = \"done\" ;\n        }\n        removeTask(task: any){\n      task.status = \"removed\" ;\n      let index = this.tasks.indexOf(task) ;\n      if (index > -1){\n      this.tasks.splice(index,1) ;\n      }\n        }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tasklist/tasklist.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { TaskListPage } from '../pages/tasklist/tasklist';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    TaskListPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    TaskListPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TaskListPage } from '../pages/tasklist/tasklist';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TaskListPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}